import psycopg2 # type: ignore
import csv

# Database connection function
def connect():
    return psycopg2.connect(
        dbname="lab10",
        user="postgres",
        password="181124",  
        host="localhost",
        port="5432"
    )

# Create PhoneBook table
def create_table():
    conn = connect()
    cur = conn.cursor()
    cur.execute("""
        CREATE TABLE IF NOT EXISTS PhoneBook (
            id SERIAL PRIMARY KEY,
            name VARCHAR(100),
            phone VARCHAR(20)
        );
    """)
    conn.commit()
    cur.close()
    conn.close()

# Insert from CSV file
def insert_from_csv(file_path):
    conn = connect()
    cur = conn.cursor()
    with open(file_path, 'r') as f:
        reader = csv.reader(f)
        next(reader)  # Skip header
        for row in reader:
            cur.execute("INSERT INTO PhoneBook (name, phone) VALUES (%s, %s)", (row[0], row[1]))
    conn.commit()
    cur.close()
    conn.close()
    print("CSV-—Ç–µ–Ω —Å”ô—Ç—Ç—ñ –∂“Ø–∫—Ç–µ–ª–¥—ñ.")

# Insert from console
def insert_from_console():
    name = input("–ê—Ç—ã“£—ã–∑–¥—ã –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ")
    phone = input("–¢–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ")
    conn = connect()
    cur = conn.cursor()
    cur.execute("INSERT INTO PhoneBook (name, phone) VALUES (%s, %s)", (name, phone))
    conn.commit()
    cur.close()
    conn.close()
    print("–ö–æ–Ω—Å–æ–ª–¥–∞–Ω —Å”ô—Ç—Ç—ñ –µ–Ω–≥—ñ–∑—ñ–ª–¥—ñ.")

# Update user data
def update_user():
    name = input("“ö–∞–π “õ–æ–ª–¥–∞–Ω—É—à—ã–Ω—ã –∂–∞“£–∞—Ä—Ç“õ—ã“£—ã–∑ –∫–µ–ª–µ–¥—ñ (–∞—Ç—ã): ")
    field = input("“ö–∞–π ”©—Ä—ñ—Å—Ç—ñ ”©–∑–≥–µ—Ä—Ç–∫—ñ“£—ñ–∑ –∫–µ–ª–µ–¥—ñ? (name/phone): ")
    new_value = input("–ñ–∞“£–∞ –º”ô–Ω–¥—ñ –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ")
    
    conn = connect()
    cur = conn.cursor()
    if field == 'name':
        cur.execute("UPDATE PhoneBook SET name = %s WHERE name = %s", (new_value, name))
    elif field == 'phone':
        cur.execute("UPDATE PhoneBook SET phone = %s WHERE name = %s", (new_value, name))
    else:
        print("“ö–∞—Ç–µ ”©—Ä—ñ—Å.")
    conn.commit()
    cur.close()
    conn.close()
    print("–ú”ô–ª—ñ–º–µ—Ç —Å”ô—Ç—Ç—ñ –∂–∞“£–∞—Ä—Ç—ã–ª–¥—ã.")

# Query data with optional filter
def query_data():
    keyword = input("–Ü–∑–¥–µ—É —Å”©–∑—ñ–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑ (–Ω–µ–º–µ—Å–µ –±–æ—Å “õ–∞–ª–¥—ã—Ä—ã“£—ã–∑): ")
    conn = connect()
    cur = conn.cursor()
    if keyword:
        cur.execute("SELECT * FROM PhoneBook WHERE name ILIKE %s OR phone ILIKE %s", 
                    (f'%{keyword}%', f'%{keyword}%'))
    else:
        cur.execute("SELECT * FROM PhoneBook")
    rows = cur.fetchall()
    for row in rows:
        print(row)
    cur.close()
    conn.close()

# Delete by name or phone
def delete_data():
    method = input("“ö–∞–ª–∞–π ”©—à—ñ—Ä–≥—ñ“£—ñ–∑ –∫–µ–ª–µ–¥—ñ? (name/phone): ")
    value = input("–ú”ô–Ω–¥—ñ –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ")
    conn = connect()
    cur = conn.cursor()
    if method == 'name':
        cur.execute("DELETE FROM PhoneBook WHERE name = %s", (value,))
    elif method == 'phone':
        cur.execute("DELETE FROM PhoneBook WHERE phone = %s", (value,))
    else:
        print("“ö–∞—Ç–µ ”ô–¥—ñ—Å.")
    conn.commit()
    cur.close()
    conn.close()
    print("–°”ô—Ç—Ç—ñ ”©—à—ñ—Ä—ñ–ª–¥—ñ.")

# Main menu
def main():
    create_table()
    while True:
        print("\nüì± PhoneBook –º”ô–∑—ñ—Ä—ñ:")
        print("1. CSV-—Ç–µ–Ω –¥–µ—Ä–µ–∫ –∂“Ø–∫—Ç–µ—É")
        print("2. –ö–æ–Ω—Å–æ–ª–¥–∞–Ω –¥–µ—Ä–µ–∫ –µ–Ω–≥—ñ–∑—É")
        print("3. –ú”ô–ª—ñ–º–µ—Ç –∂–∞“£–∞—Ä—Ç—É")
        print("4. –ú”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä–¥—ñ –∫”©—Ä—É")
        print("5. –ú”ô–ª—ñ–º–µ—Ç –∂–æ—é")
        print("0. –®—ã“ì—É")
        choice = input("–¢–∞“£–¥–∞—É—ã“£—ã–∑–¥—ã –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ")

        if choice == '1':
            path = input("CSV —Ñ–∞–π–ª –∂–æ–ª—ã–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ")
            insert_from_csv(path)
        elif choice == '2':
            insert_from_console()
        elif choice == '3':
            update_user()
        elif choice == '4':
            query_data()
        elif choice == '5':
            delete_data()
        elif choice == '0':
            print("–ë–∞“ì–¥–∞—Ä–ª–∞–º–∞ –∞—è“õ—Ç–∞–ª–¥—ã.")
            break
        else:
            print("“ö–∞—Ç–µ —Ç–∞“£–¥–∞—É. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.")

if __name__ == '__main__':
    main()
